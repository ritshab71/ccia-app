{"ast":null,"code":"var _jsxFileName = \"/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard({\n  patient\n}) {\n  _s();\n\n  const [datafiles, setDatafiles] = useState(\"\");\n  console.log(\"http://20.191.211.229:5000/v1/datafiles?patient_id=\" + patient + \"&max_size=50&show_metadata=true\");\n  console.log(\"wtf\");\n  useEffect(() => {\n    if (patient) {\n      console.log(\"hit\");\n      fetch(\"http://20.191.211.229:5000/v1/datafiles?patient_id=\" + patient + \"&max_size=50&show_metadata=true\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(files => {\n        setDatafiles(files);\n      });\n    }\n  }, [patient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-panel\",\n    children: !datafiles ? /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: datafiles.map((result, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: result.file_id,\n          className: \"datafiles\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Result \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filedata\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Filedata\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Filename: \", result.filename]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Filetype: \", result.filetype]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"meta-\" + result.file_id,\n            className: \"metadata\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Metadata\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Patient ID: \", result._metadata.patient_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sample ID: \", result._metadata.sample_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sample Type: \", result._metadata.sample_type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Genome: \", result._metadata.refgenome]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Zc6ADhHaODvrHeoen4Y7zz+7Loo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx"],"names":["useState","useEffect","Dashboard","patient","datafiles","setDatafiles","console","log","fetch","method","headers","then","res","json","files","map","result","index","file_id","filename","filetype","_metadata","patient_id","sample_id","sample_type","refgenome"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAM,EAAAA,OAAO,CAACC,GAAR,CACE,wDACEJ,OADF,GAEE,iCAHJ;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,OAAJ,EAAa;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,MAAAA,KAAK,CACH,wDACEL,OADF,GAEE,iCAHC,EAIH;AACEM,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFX,OAJG,CAAL,CAWGC,IAXH,CAWQC,GAAG,IAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAbH,EAcGF,IAdH,CAcQG,KAAK,IAAI;AACbT,QAAAA,YAAY,CAACS,KAAD,CAAZ;AACD,OAhBH;AAiBD;AACF,GArBQ,EAqBN,CAACX,OAAD,CArBM,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACG,CAACC,SAAD,gBACC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGA,SAAS,CAACW,GAAV,CAAc,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChC,4BACE;AAAK,UAAA,EAAE,EAAED,MAAM,CAACE,OAAhB;AAAyB,UAAA,SAAS,EAAC,WAAnC;AAAA,kCACE;AAAA,kCAAWD,KAAK,GAAG,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,uCAAcD,MAAM,CAACG,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,uCAAcH,MAAM,CAACI,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAK,YAAA,EAAE,EAAE,UAAUJ,MAAM,CAACE,OAA1B;AAAmC,YAAA,SAAS,EAAC,UAA7C;AAAA,oCACE;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,yCAAgBF,MAAM,CAACK,SAAP,CAAiBC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wCAAeN,MAAM,CAACK,SAAP,CAAiBE,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,0CAAiBP,MAAM,CAACK,SAAP,CAAiBG,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA,qCAAYR,MAAM,CAACK,SAAP,CAAiBI,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAqBD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAlEQvB,S;;KAAAA,S;AAoET,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Dashboard({ patient }) {\n  const [datafiles, setDatafiles] = useState(\"\");\n\n  console.log(\n    \"http://20.191.211.229:5000/v1/datafiles?patient_id=\" +\n      patient +\n      \"&max_size=50&show_metadata=true\"\n  );\n\n  console.log(\"wtf\");\n  useEffect(() => {\n    if (patient) {\n      console.log(\"hit\");\n      fetch(\n        \"http://20.191.211.229:5000/v1/datafiles?patient_id=\" +\n          patient +\n          \"&max_size=50&show_metadata=true\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(res => {\n          return res.json();\n        })\n        .then(files => {\n          setDatafiles(files);\n        });\n    }\n  }, [patient]);\n\n  return (\n    <div className=\"dashboard-panel\">\n      {!datafiles ? (\n        <h2></h2>\n      ) : (\n        <div>\n          {datafiles.map((result, index) => {\n            return (\n              <div id={result.file_id} className=\"datafiles\">\n                <p>Result {index + 1}</p>\n                <div className=\"filedata\">\n                  <p>\n                    <u>Filedata</u>\n                  </p>\n                  <p>Filename: {result.filename}</p>\n                  <p>Filetype: {result.filetype}</p>\n                </div>\n                <div id={\"meta-\" + result.file_id} className=\"metadata\">\n                  <p>\n                    <u>Metadata</u>\n                  </p>\n                  <p>Patient ID: {result._metadata.patient_id}</p>\n                  <p>Sample ID: {result._metadata.sample_id}</p>\n                  <p>Sample Type: {result._metadata.sample_type}</p>\n                  <p>Genome: {result._metadata.refgenome}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}