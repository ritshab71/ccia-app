{"ast":null,"code":"var _jsxFileName = \"/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  formatCount() {\n    return this.state.count === 0 ? \"Zero\" : this.state.count;\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx"],"names":["React","Component","Dashboard","state","count","render","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE;AADD,KADwB;AAAA;;AAKhCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA,wBAAQ,KAAKF,KAAL,CAAWC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKH,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,MAAzB,GAAkC,KAAKD,KAAL,CAAWC,KAApD;AACD;;AAhB+B;;AAmBlC,eAAeF,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Dashboard extends Component {\n  state = {\n    count: 1\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <span> {this.state.count} </span>\n        <button>Increment</button>\n      </React.Fragment>\n    );\n  }\n\n  formatCount() {\n    return this.state.count === 0 ? \"Zero\" : this.state.count;\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}