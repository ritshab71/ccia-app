{"ast":null,"code":"var _jsxFileName = \"/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [loading, setLoading] = useState(true);\n  const [results, setResults] = useState(\"\");\n  const [metadata, setMetadata] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://20.191.211.229:5000/v1/datafiles?filetype=tdf&max_size=30\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      // setLoading(false);\n      setResults(data);\n    });\n  });\n\n  function getMetadata(file_id) {\n    _s();\n\n    return useEffect(() => {\n      fetch(\"http://20.191.211.229:5000/v1/datafiles/\" + file_id + \"/metadata\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        setLoading(false);\n        setMetadata(data);\n      });\n    });\n  }\n\n  _s(getMetadata, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading || !results ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results.map(result => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: result.file_id,\n          className: \"results\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Filename: \", result.filename]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Filetype: \", result.filetype]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Dashboard, \"bLbRKIVRvGh1ZR8UlQfDn+5sfQc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/ritshab/Desktop/desn2000/ccia/src/components/dashboard.jsx"],"names":["useState","useEffect","Dashboard","loading","setLoading","results","setResults","metadata","setMetadata","fetch","method","headers","then","res","json","data","getMetadata","file_id","map","result","filename","filetype"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,kEAAD,EAAqE;AACxEC,MAAAA,MAAM,EAAE,KADgE;AAExEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAF+D,KAArE,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KARH,EASGF,IATH,CASQG,IAAI,IAAI;AACZ;AACAT,MAAAA,UAAU,CAACS,IAAD,CAAV;AACD,KAZH;AAaD,GAdQ,CAAT;;AAgBA,WAASC,WAAT,CAAqBC,OAArB,EAA8B;AAAA;;AAC5B,WAAOhB,SAAS,CAAC,MAAM;AACrBQ,MAAAA,KAAK,CACH,6CAA6CQ,OAA7C,GAAuD,WADpD,EAEH;AACEP,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFX,OAFG,CAAL,CASGC,IATH,CASQC,GAAG,IAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAXH,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACZX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,WAAW,CAACO,IAAD,CAAX;AACD,OAfH;AAgBD,KAjBe,CAAhB;AAkBD;;AAxCkB,KAqBVC,WArBU;;AA0CnB,sBACE;AAAA,cACGb,OAAO,IAAI,CAACE,OAAZ,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGA,OAAO,CAACa,GAAR,CAAYC,MAAM,IAAI;AACrB,4BACE;AAAK,UAAA,EAAE,EAAEA,MAAM,CAACF,OAAhB;AAAyB,UAAA,SAAS,EAAC,SAAnC;AAAA,kCACE;AAAA,qCAAcE,MAAM,CAACC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,qCAAcD,MAAM,CAACE,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADH;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;IA7DQnB,S;;KAAAA,S;AA+DT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Dashboard() {\n  const [loading, setLoading] = useState(true);\n  const [results, setResults] = useState(\"\");\n  const [metadata, setMetadata] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://20.191.211.229:5000/v1/datafiles?filetype=tdf&max_size=30\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        // setLoading(false);\n        setResults(data);\n      });\n  });\n\n  function getMetadata(file_id) {\n    return useEffect(() => {\n      fetch(\n        \"http://20.191.211.229:5000/v1/datafiles/\" + file_id + \"/metadata\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n        .then(res => {\n          return res.json();\n        })\n        .then(data => {\n          setLoading(false);\n          setMetadata(data);\n        });\n    });\n  }\n\n  return (\n    <div>\n      {loading || !results ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div>\n          {results.map(result => {\n            return (\n              <div id={result.file_id} className=\"results\">\n                <p>Filename: {result.filename}</p>\n                <p>Filetype: {result.filetype}</p>\n                \n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}